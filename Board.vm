function Board.new 1
push constant 14
call Memory.alloc 1
pop pointer 0
push argument 0
push argument 1
call Math.multiply 2
call Array.new 1
pop this 0
push constant 0
pop this 7
push constant 0
pop this 10
push constant 0
pop this 6
push pointer 0
push argument 0
push argument 1
call Board.reset 3
pop temp 0
push pointer 0
return
function Board.get_square 0
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
return
function Board.get_cursor 0
push argument 0
pop pointer 0
push this 7
return
function Board.get_grid 0
push argument 0
pop pointer 0
push this 0
return
function Board.get_hostage 0
push argument 0
pop pointer 0
push argument 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 2
push this 4
add
pop pointer 1
push that 0
return
goto IF_END0
label IF_FALSE0
push argument 2
push this 3
add
pop pointer 1
push that 0
return
label IF_END0
function Board.get_legal_moves_pawn 9
push argument 0
pop pointer 0
push constant 9
call Array.new 1
pop local 3
push argument 1
push this 0
add
pop pointer 1
push that 0
push constant 16
call Math.divide 2
pop local 5
push constant 3
pop local 1
push local 1
call Array.new 1
pop local 4
push local 5
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
push local 4
add
push constant 7
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 4
add
push constant 6
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 4
add
push constant 5
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END0
label IF_FALSE0
push constant 0
push local 4
add
push constant 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 4
add
push constant 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 4
add
push constant 7
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END0
push constant 0
pop local 0
push constant 0
pop local 2
label WHILE_EXP0
push local 0
push local 1
lt
not
if-goto WHILE_END0
push argument 1
push local 0
push local 4
add
pop pointer 1
push that 0
add
pop local 6
push local 6
push constant 1
neg
gt
push local 6
and
push constant 36
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 6
push this 0
add
pop pointer 1
push that 0
pop local 7
push local 7
push constant 0
eq
push local 0
push local 4
add
pop pointer 1
push that 0
push constant 6
eq
push local 0
push local 4
add
pop pointer 1
push that 0
push constant 6
neg
eq
or
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 2
push constant 1
add
pop local 2
push local 2
push local 3
add
push local 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END2
label IF_FALSE2
push argument 1
push local 6
call Board.get_distance 2
push constant 3
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 7
push constant 0
eq
not
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 7
push constant 16
call Math.divide 2
pop local 8
push local 8
push local 5
eq
not
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 2
push constant 1
add
pop local 2
push local 2
push local 3
add
push local 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE5
label IF_FALSE4
label IF_FALSE3
label IF_END2
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
push local 3
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 4
call Array.dispose 1
pop temp 0
push local 3
return
function Board.get_legal_moves_knight 7
push argument 0
pop pointer 0
push constant 8
call Array.new 1
pop local 2
push constant 0
push local 2
add
push constant 13
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 2
add
push constant 11
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 2
add
push constant 8
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push local 2
add
push constant 4
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push local 2
add
push constant 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push local 2
add
push constant 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push local 2
add
push constant 11
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push local 2
add
push constant 13
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop local 4
push constant 9
call Array.new 1
pop local 3
push argument 1
push this 0
add
pop pointer 1
push that 0
push constant 16
call Math.divide 2
pop local 0
label WHILE_EXP0
push local 4
push constant 8
lt
not
if-goto WHILE_END0
push argument 1
push local 4
push local 2
add
pop pointer 1
push that 0
add
pop local 6
push local 6
push constant 1
neg
gt
push local 6
and
push constant 36
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push local 6
call Board.get_distance 2
push constant 4
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 6
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push constant 1
add
pop local 1
push local 1
push local 3
add
push local 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END2
label IF_FALSE2
push local 6
push this 0
add
pop pointer 1
push that 0
push constant 16
call Math.divide 2
pop local 5
push local 5
push local 0
eq
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
push constant 1
add
pop local 1
push local 1
push local 3
add
push local 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE3
label IF_END2
label IF_FALSE1
label IF_FALSE0
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP0
label WHILE_END0
push constant 0
push local 3
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
call Array.dispose 1
pop temp 0
push local 3
return
function Board.get_legal_moves_BRQ 10
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
pop local 8
push constant 0
pop local 7
push local 8
push constant 16
sub
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 8
push constant 16
sub
pop local 8
push constant 1
pop local 7
label IF_FALSE0
push constant 36
call Array.new 1
pop local 1
push local 8
push constant 6
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 4
call Array.new 1
pop local 0
push constant 4
pop local 3
push constant 0
push local 0
add
push constant 7
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 5
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 0
add
push constant 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push local 0
add
push constant 7
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE1
push local 8
push constant 8
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 4
call Array.new 1
pop local 0
push constant 4
pop local 3
push constant 0
push local 0
add
push constant 6
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push local 0
add
push constant 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE2
push local 8
push constant 10
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 8
call Array.new 1
pop local 0
push constant 8
pop local 3
push constant 0
push local 0
add
push constant 7
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 0
add
push constant 6
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 0
add
push constant 5
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push local 0
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push local 0
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push local 0
add
push constant 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push local 0
add
push constant 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push local 0
add
push constant 7
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE3
push constant 0
pop local 2
label WHILE_EXP0
push local 2
push local 3
lt
not
if-goto WHILE_END0
push constant 0
pop local 4
push argument 1
push local 2
push local 0
add
pop pointer 1
push that 0
add
pop local 5
push local 5
push this 0
add
pop pointer 1
push that 0
push constant 16
call Math.divide 2
pop local 9
label WHILE_EXP1
push local 5
push constant 1
neg
gt
push local 5
push constant 36
lt
push local 4
not
and
and
not
if-goto WHILE_END1
push local 5
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 6
push constant 1
add
pop local 6
push local 6
push local 1
add
push local 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END4
label IF_FALSE4
push local 5
push this 0
add
pop pointer 1
push that 0
push constant 16
call Math.divide 2
pop local 9
push constant 0
not
pop local 4
push local 9
push local 7
eq
not
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push local 6
push constant 1
add
pop local 6
push local 6
push local 1
add
push local 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE5
label IF_END4
push local 5
push local 2
push local 0
add
pop pointer 1
push that 0
add
pop local 5
goto WHILE_EXP1
label WHILE_END1
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
push local 1
add
push local 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
call Array.dispose 1
pop temp 0
push local 1
return
function Board.get_legal_moves_king 9
push argument 0
pop pointer 0
push argument 1
push this 0
add
pop pointer 1
push that 0
push constant 16
call Math.divide 2
pop local 5
push constant 9
call Array.new 1
pop local 3
push constant 8
pop local 1
push local 1
call Array.new 1
pop local 4
push constant 0
push local 4
add
push constant 7
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push local 4
add
push constant 6
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push local 4
add
push constant 5
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push local 4
add
push constant 1
neg
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push local 4
add
push constant 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push local 4
add
push constant 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push local 4
add
push constant 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push local 4
add
push constant 7
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop local 0
push constant 0
pop local 2
label WHILE_EXP0
push local 0
push local 1
lt
not
if-goto WHILE_END0
push argument 1
push local 0
push local 4
add
pop pointer 1
push that 0
add
pop local 6
push local 6
push this 0
add
pop pointer 1
push that 0
pop local 7
push local 7
push constant 16
call Math.divide 2
pop local 8
push argument 1
push local 6
call Board.get_distance 2
push constant 3
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 6
push constant 1
neg
gt
push local 6
and
push constant 36
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 7
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 2
push constant 1
add
pop local 2
push local 2
push local 3
add
push local 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END2
label IF_FALSE2
push local 8
push local 5
eq
not
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 2
push constant 1
add
pop local 2
push local 2
push local 3
add
push local 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE3
label IF_END2
label IF_FALSE1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
push local 3
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 4
call Array.dispose 1
pop temp 0
push local 3
return
function Board.get_legal_moves_airdrop 3
push argument 0
pop pointer 0
push constant 36
call Array.new 1
pop local 2
label WHILE_EXP0
push local 0
push constant 36
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push constant 1
add
pop local 1
push local 1
push local 2
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
push local 2
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
return
function Board.get_legal_moves 1
push argument 0
pop pointer 0
push this 11
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
push argument 1
call Board.get_legal_moves_airdrop 2
pop this 5
goto IF_END0
label IF_FALSE0
push argument 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
push constant 16
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 16
sub
pop local 0
label IF_FALSE1
push local 0
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
call Array.new 1
pop this 5
push constant 0
push this 5
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE2
push local 0
push constant 2
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
push argument 1
call Board.get_legal_moves_pawn 2
pop this 5
label IF_FALSE3
push local 0
push constant 4
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
push argument 1
call Board.get_legal_moves_knight 2
pop this 5
label IF_FALSE4
push local 0
push constant 6
eq
push local 0
push constant 8
eq
or
push local 0
push constant 10
eq
or
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push pointer 0
push argument 1
call Board.get_legal_moves_BRQ 2
pop this 5
label IF_FALSE5
push local 0
push constant 12
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push pointer 0
push argument 1
call Board.get_legal_moves_king 2
pop this 5
label IF_FALSE6
label IF_END0
push this 5
return
function Board.get_distance 5
push argument 0
push constant 6
call Util.mod 2
pop local 1
push argument 0
push constant 6
call Math.divide 2
pop local 2
push argument 1
push constant 6
call Util.mod 2
pop local 3
push argument 1
push constant 6
call Math.divide 2
pop local 4
push local 1
push local 3
sub
call Util.abs 1
push local 2
push local 4
sub
call Util.abs 1
add
pop local 0
push local 0
return
function Board.choose_airdrop_piece 0
push argument 0
pop pointer 0
push constant 0
not
pop this 11
push argument 1
pop this 12
push this 6
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push this 3
add
pop pointer 1
push that 0
pop this 13
goto IF_END0
label IF_FALSE0
push argument 1
push this 4
add
pop pointer 1
push that 0
pop this 13
label IF_END0
push constant 0
not
pop this 10
push constant 0
return
function Board.advance_next_player 0
push argument 0
pop pointer 0
push this 6
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop this 6
push constant 22
push constant 26
call Output.moveCursor 2
pop temp 0
push constant 13
call String.new 1
push constant 66
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 107
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 101
call String.appendChar 2
call Game.printString 1
pop temp 0
goto IF_END0
label IF_FALSE0
push constant 0
pop this 6
push constant 22
push constant 26
call Output.moveCursor 2
pop temp 0
push constant 13
call String.new 1
push constant 87
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 101
call String.appendChar 2
call Game.printString 1
pop temp 0
label IF_END0
push constant 0
return
function Board.make_move 7
push argument 0
pop pointer 0
push constant 36
call Array.new 1
pop local 0
push constant 1
pop local 2
push constant 0
pop local 1
push constant 0
pop local 4
push this 11
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 13
pop local 5
goto IF_END0
label IF_FALSE0
push this 8
push this 0
add
pop pointer 1
push that 0
pop local 5
label IF_END0
push this 7
push this 0
add
pop pointer 1
push that 0
push constant 16
call Math.divide 2
pop local 3
push this 10
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 3
push this 6
eq
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Board.cancel_move 1
pop temp 0
push constant 0
return
goto IF_END2
label IF_FALSE2
push this 7
pop this 8
push constant 0
not
pop this 10
push constant 0
return
label IF_END2
label IF_FALSE1
push this 11
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
push this 12
call Board.get_legal_moves 2
pop local 0
goto IF_END3
label IF_FALSE3
push pointer 0
push this 8
call Board.get_legal_moves 2
pop local 0
label IF_END3
push this 7
pop this 9
label WHILE_EXP0
push local 2
push constant 0
push local 0
add
pop pointer 1
push that 0
push constant 1
add
lt
not
if-goto WHILE_END0
push this 9
push local 2
push local 0
add
pop pointer 1
push that 0
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
pop local 1
label IF_FALSE4
push local 0
call Array.dispose 1
pop temp 0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push local 1
not
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push pointer 0
call Board.cancel_move 1
pop temp 0
push local 0
call Array.dispose 1
pop temp 0
push constant 0
return
goto IF_END5
label IF_FALSE5
push local 0
call Array.dispose 1
pop temp 0
push this 9
push this 0
add
pop pointer 1
push that 0
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 9
push this 0
add
pop pointer 1
push that 0
push constant 12
eq
push this 9
push this 0
add
pop pointer 1
push that 0
push constant 28
eq
or
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 9
push this 0
add
pop pointer 1
push that 0
push constant 12
eq
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push this 9
push this 0
add
push this 8
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 8
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 22
push constant 24
call Output.moveCursor 2
pop temp 0
push constant 15
call String.new 1
push constant 66
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 107
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 119
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 44
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 48
call String.appendChar 2
push constant 45
call String.appendChar 2
push constant 49
call String.appendChar 2
call Game.printString 1
pop temp 0
push constant 0
return
label IF_FALSE8
push this 9
push this 0
add
pop pointer 1
push that 0
push constant 28
eq
if-goto IF_TRUE9
goto IF_FALSE9
label IF_TRUE9
push this 9
push this 0
add
push this 8
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 8
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 22
push constant 24
call Output.moveCursor 2
pop temp 0
push constant 15
call String.new 1
push constant 87
call String.appendChar 2
push constant 104
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 119
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 44
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 49
call String.appendChar 2
push constant 45
call String.appendChar 2
push constant 48
call String.appendChar 2
call Game.printString 1
pop temp 0
push constant 0
return
label IF_FALSE9
goto IF_END7
label IF_FALSE7
push this 9
push this 0
add
pop pointer 1
push that 0
push constant 16
sub
push constant 0
lt
if-goto IF_TRUE10
goto IF_FALSE10
label IF_TRUE10
label WHILE_EXP1
push local 4
push constant 12
lt
not
if-goto WHILE_END1
push local 4
push this 4
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE11
goto IF_FALSE11
label IF_TRUE11
push local 4
push this 4
add
push this 9
push this 0
add
pop pointer 1
push that 0
push constant 16
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
pop local 4
label IF_FALSE11
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP1
label WHILE_END1
goto IF_END10
label IF_FALSE10
label WHILE_EXP2
push local 4
push constant 12
lt
not
if-goto WHILE_END2
push local 4
push this 3
add
pop pointer 1
push that 0
push constant 0
eq
if-goto IF_TRUE12
goto IF_FALSE12
label IF_TRUE12
push local 4
push this 3
add
push this 9
push this 0
add
pop pointer 1
push that 0
push constant 16
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 12
pop local 4
label IF_FALSE12
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP2
label WHILE_END2
label IF_END10
label IF_END7
goto IF_END6
label IF_FALSE6
push this 11
if-goto IF_TRUE13
goto IF_FALSE13
label IF_TRUE13
push this 6
push constant 0
eq
if-goto IF_TRUE14
goto IF_FALSE14
label IF_TRUE14
push this 12
push this 3
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
goto IF_END14
label IF_FALSE14
push this 12
push this 4
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END14
push local 4
push constant 1
add
pop local 4
label IF_FALSE13
label IF_END6
push this 11
if-goto IF_TRUE15
goto IF_FALSE15
label IF_TRUE15
push this 9
push this 0
add
push this 13
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
pop this 13
push constant 0
pop this 12
push constant 0
pop this 11
goto IF_END15
label IF_FALSE15
push this 9
push this 0
add
push this 8
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 8
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_END15
push constant 0
pop this 10
push local 0
call Array.dispose 1
pop temp 0
push pointer 0
call Board.advance_next_player 1
pop temp 0
push constant 0
return
label IF_END5
function Board.cancel_move 0
push argument 0
pop pointer 0
push constant 0
pop this 7
push constant 0
pop this 8
push constant 0
pop this 9
push constant 0
pop this 13
push constant 0
pop this 12
push constant 0
pop this 11
push constant 0
pop this 10
push constant 0
return
function Board.move_right 0
push argument 0
pop pointer 0
push this 7
push constant 1
add
push constant 6
call Util.mod 2
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 7
push constant 1
add
pop this 7
goto IF_END0
label IF_FALSE0
push this 7
push constant 5
sub
pop this 7
label IF_END0
push constant 0
return
function Board.move_left 0
push argument 0
pop pointer 0
push this 7
push constant 6
call Util.mod 2
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 7
push constant 1
sub
pop this 7
goto IF_END0
label IF_FALSE0
push this 7
push constant 5
add
pop this 7
label IF_END0
push constant 0
return
function Board.move_up 0
push argument 0
pop pointer 0
push this 7
push constant 6
sub
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 7
push constant 30
add
pop this 7
goto IF_END0
label IF_FALSE0
push this 7
push constant 6
sub
pop this 7
label IF_END0
push constant 0
return
function Board.move_down 0
push argument 0
pop pointer 0
push this 7
push constant 6
add
push constant 35
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 7
push constant 30
sub
pop this 7
goto IF_END0
label IF_FALSE0
push this 7
push constant 6
add
pop this 7
label IF_END0
push constant 0
return
function Board.reset 3
push argument 0
pop pointer 0
push argument 1
push argument 2
call Math.multiply 2
call Array.new 1
pop this 0
push constant 12
call Array.new 1
pop this 3
push constant 12
call Array.new 1
pop this 4
push constant 0
pop this 6
push constant 0
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push constant 12
lt
not
if-goto WHILE_END0
push local 1
push this 3
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push this 4
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
label WHILE_EXP1
push local 0
push constant 36
lt
not
if-goto WHILE_END1
push local 0
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
push this 0
add
push constant 24
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 0
add
push constant 22
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 0
add
push constant 26
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 0
add
push constant 28
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push this 0
add
push constant 22
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push this 0
add
push constant 24
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push this 0
add
push constant 18
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push this 0
add
push constant 18
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push this 0
add
push constant 18
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
push this 0
add
push constant 18
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 10
push this 0
add
push constant 18
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 11
push this 0
add
push constant 18
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 24
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 25
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 26
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 27
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 28
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 29
push this 0
add
push constant 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 30
push this 0
add
push constant 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 31
push this 0
add
push constant 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 32
push this 0
add
push constant 10
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 33
push this 0
add
push constant 12
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 34
push this 0
add
push constant 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 35
push this 0
add
push constant 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Board.move 0
push argument 0
pop pointer 0
push argument 2
push this 0
add
push argument 1
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
